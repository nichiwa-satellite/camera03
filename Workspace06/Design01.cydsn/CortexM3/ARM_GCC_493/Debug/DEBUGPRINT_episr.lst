ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"DEBUGPRINT_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.DEBUGPRINT_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	DEBUGPRINT_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	DEBUGPRINT_EP_1_ISR, %function
  24              	DEBUGPRINT_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\DEBUGPRINT_episr.c"
   1:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** * \file DEBUGPRINT_episr.c
   3:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** * \version 3.10
   4:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** *
   5:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** * \brief
   6:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** *
   8:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** * \copyright
  10:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
  16:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #include "DEBUGPRINT_pvt.h"
  17:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #include "DEBUGPRINT_cydmac.h"
  18:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
  20:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
  21:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** /***************************************
  22:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
  26:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
  28:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
  29:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #if (DEBUGPRINT_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     /******************************************************************************
  31:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     * Function Name: DEBUGPRINT_EP_1_ISR
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 2


  32:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
  34:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
  36:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     CY_ISR(DEBUGPRINT_EP_1_ISR)
  38:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     {
  27              		.loc 1 38 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  39:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
  40:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
  44:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
  46:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
  48:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC3 && defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         {
  51:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC3 && DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     
  55:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_ClearSieEpInterruptSource(DEBUGPRINT_SIE_INT_EP1_INTR);
  32              		.loc 1 55 0
  33 0000 0122     		movs	r2, #1
  34 0002 094B     		ldr	r3, .L3
  35 0004 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             
  57:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         */
  61:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         if (0u != (DEBUGPRINT_EP[DEBUGPRINT_EP1].addr & DEBUGPRINT_DIR_IN))
  63:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         {
  65:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             (void) DEBUGPRINT_SIE_EP_BASE.sieEp[DEBUGPRINT_EP1].epCr0;
  36              		.loc 1 66 0
  37 0006 0F3B     		subs	r3, r3, #15
  38 0008 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             
  68:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             if (DEBUGPRINT_GET_EP_TYPE(DEBUGPRINT_EP1) != DEBUGPRINT_EP_TYPE_ISOC)
  39              		.loc 1 69 0
  40 000a 084B     		ldr	r3, .L3+4
  41 000c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  42 000e 03F00303 		and	r3, r3, #3
  43 0012 9342     		cmp	r3, r2
  44 0014 04D0     		beq	.L2
  70:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             {
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 3


  71:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****                 DEBUGPRINT_EP[DEBUGPRINT_EP1].epToggle ^= DEBUGPRINT_EPX_CNT_DATA_TOGGLE;
  45              		.loc 1 71 0
  46 0016 054A     		ldr	r2, .L3+4
  47 0018 D37B     		ldrb	r3, [r2, #15]	@ zero_extendqisi2
  48 001a 83F08003 		eor	r3, r3, #128
  49 001e D373     		strb	r3, [r2, #15]
  50              	.L2:
  72:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             }
  73:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
  74:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             */
  80:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             DEBUGPRINT_EP[DEBUGPRINT_EP1].apiEpState = DEBUGPRINT_EVENT_PENDING;
  51              		.loc 1 80 0
  52 0020 0122     		movs	r2, #1
  53 0022 024B     		ldr	r3, .L3+4
  54 0024 5A73     		strb	r2, [r3, #13]
  55 0026 7047     		bx	lr
  56              	.L4:
  57              		.align	2
  58              	.L3:
  59 0028 0B600040 		.word	1073766411
  60 002c 00000000 		.word	DEBUGPRINT_EP
  61              		.cfi_endproc
  62              	.LFE0:
  63              		.size	DEBUGPRINT_EP_1_ISR, .-DEBUGPRINT_EP_1_ISR
  64              		.section	.text.DEBUGPRINT_EP_2_ISR,"ax",%progbits
  65              		.align	2
  66              		.global	DEBUGPRINT_EP_2_ISR
  67              		.thumb
  68              		.thumb_func
  69              		.type	DEBUGPRINT_EP_2_ISR, %function
  70              	DEBUGPRINT_EP_2_ISR:
  71              	.LFB1:
  81:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         }
  82:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
  83:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (!(CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         #if (defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             if (DEBUGPRINT_midi_out_ep == DEBUGPRINT_EP1)
  87:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             {
  88:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****                 DEBUGPRINT_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             }
  90:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         #endif /* (DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (!(CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     
  93:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
  95:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
  97:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 4


 101:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC3 && defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         
 104:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         }
 106:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC3 && DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     }
 108:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 109:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #endif /* (DEBUGPRINT_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 111:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 112:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #if (DEBUGPRINT_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     * Function Name: DEBUGPRINT_EP_2_ISR
 115:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 117:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 119:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     CY_ISR(DEBUGPRINT_EP_2_ISR)
 121:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     {
  72              		.loc 1 121 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
 122:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 126:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 128:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 130:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC3 && defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         {
 133:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC3 && DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 137:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_ClearSieEpInterruptSource(DEBUGPRINT_SIE_INT_EP2_INTR);
  77              		.loc 1 137 0
  78 0000 0222     		movs	r2, #2
  79 0002 0A4B     		ldr	r3, .L7
  80 0004 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 139:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         */
 143:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         if (0u != (DEBUGPRINT_EP[DEBUGPRINT_EP2].addr & DEBUGPRINT_DIR_IN))
 145:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         {            
 147:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             (void) DEBUGPRINT_SIE_EP_BASE.sieEp[DEBUGPRINT_EP2].epCr0;
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 5


  81              		.loc 1 148 0
  82 0006 0F3B     		subs	r3, r3, #15
  83 0008 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 149:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             
 150:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             if (DEBUGPRINT_GET_EP_TYPE(DEBUGPRINT_EP2) != DEBUGPRINT_EP_TYPE_ISOC)
  84              		.loc 1 151 0
  85 000c 084B     		ldr	r3, .L7+4
  86 000e 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  87 0010 03F00303 		and	r3, r3, #3
  88 0014 012B     		cmp	r3, #1
  89 0016 04D0     		beq	.L6
 152:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             {
 153:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****                 DEBUGPRINT_EP[DEBUGPRINT_EP2].epToggle ^= DEBUGPRINT_EPX_CNT_DATA_TOGGLE;
  90              		.loc 1 153 0
  91 0018 054A     		ldr	r2, .L7+4
  92 001a D37E     		ldrb	r3, [r2, #27]	@ zero_extendqisi2
  93 001c 83F08003 		eor	r3, r3, #128
  94 0020 D376     		strb	r3, [r2, #27]
  95              	.L6:
 154:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             }
 155:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 156:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             */
 162:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             DEBUGPRINT_EP[DEBUGPRINT_EP2].apiEpState = DEBUGPRINT_EVENT_PENDING;
  96              		.loc 1 162 0
  97 0022 0122     		movs	r2, #1
  98 0024 024B     		ldr	r3, .L7+4
  99 0026 5A76     		strb	r2, [r3, #25]
 100 0028 7047     		bx	lr
 101              	.L8:
 102 002a 00BF     		.align	2
 103              	.L7:
 104 002c 0B600040 		.word	1073766411
 105 0030 00000000 		.word	DEBUGPRINT_EP
 106              		.cfi_endproc
 107              	.LFE1:
 108              		.size	DEBUGPRINT_EP_2_ISR, .-DEBUGPRINT_EP_2_ISR
 109              		.section	.text.DEBUGPRINT_EP_3_ISR,"ax",%progbits
 110              		.align	2
 111              		.global	DEBUGPRINT_EP_3_ISR
 112              		.thumb
 113              		.thumb_func
 114              		.type	DEBUGPRINT_EP_3_ISR, %function
 115              	DEBUGPRINT_EP_3_ISR:
 116              	.LFB2:
 163:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         }
 164:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 165:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (!(CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         #if (defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             if (DEBUGPRINT_midi_out_ep == DEBUGPRINT_EP2)
 169:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             {
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 6


 170:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****                 DEBUGPRINT_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             }
 172:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         #endif /* (DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (!(CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     
 175:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 177:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 179:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 183:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC3 && defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         
 186:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         }
 188:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC3 && DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     }
 190:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #endif /* (DEBUGPRINT_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 192:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 193:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #if (DEBUGPRINT_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     * Function Name: DEBUGPRINT_EP_3_ISR
 196:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 198:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 200:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     CY_ISR(DEBUGPRINT_EP_3_ISR)
 202:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     {
 117              		.loc 1 202 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 203:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 207:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 209:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 211:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC3 && defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         {
 214:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC3 && DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 218:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_ClearSieEpInterruptSource(DEBUGPRINT_SIE_INT_EP3_INTR);    
 122              		.loc 1 218 0
 123 0000 0422     		movs	r2, #4
 124 0002 0C4B     		ldr	r3, .L11
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 7


 125 0004 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 220:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         */
 224:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         if (0u != (DEBUGPRINT_EP[DEBUGPRINT_EP3].addr & DEBUGPRINT_DIR_IN))
 226:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         {            
 228:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             (void) DEBUGPRINT_SIE_EP_BASE.sieEp[DEBUGPRINT_EP3].epCr0;
 126              		.loc 1 229 0
 127 0006 0F3B     		subs	r3, r3, #15
 128 0008 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 230:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 231:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             if (DEBUGPRINT_GET_EP_TYPE(DEBUGPRINT_EP3) != DEBUGPRINT_EP_TYPE_ISOC)
 129              		.loc 1 232 0
 130 000c 0A4B     		ldr	r3, .L11+4
 131 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 132 0012 03F00303 		and	r3, r3, #3
 133 0016 012B     		cmp	r3, #1
 134 0018 06D0     		beq	.L10
 233:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             {
 234:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****                 DEBUGPRINT_EP[DEBUGPRINT_EP3].epToggle ^= DEBUGPRINT_EPX_CNT_DATA_TOGGLE;
 135              		.loc 1 234 0
 136 001a 074A     		ldr	r2, .L11+4
 137 001c 92F82730 		ldrb	r3, [r2, #39]	@ zero_extendqisi2
 138 0020 83F08003 		eor	r3, r3, #128
 139 0024 82F82730 		strb	r3, [r2, #39]
 140              	.L10:
 235:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             }
 236:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 237:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             */
 243:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             DEBUGPRINT_EP[DEBUGPRINT_EP3].apiEpState = DEBUGPRINT_EVENT_PENDING;
 141              		.loc 1 243 0
 142 0028 0122     		movs	r2, #1
 143 002a 034B     		ldr	r3, .L11+4
 144 002c 83F82520 		strb	r2, [r3, #37]
 145 0030 7047     		bx	lr
 146              	.L12:
 147 0032 00BF     		.align	2
 148              	.L11:
 149 0034 0B600040 		.word	1073766411
 150 0038 00000000 		.word	DEBUGPRINT_EP
 151              		.cfi_endproc
 152              	.LFE2:
 153              		.size	DEBUGPRINT_EP_3_ISR, .-DEBUGPRINT_EP_3_ISR
 154              		.section	.text.DEBUGPRINT_SOF_ISR,"ax",%progbits
 155              		.align	2
 156              		.global	DEBUGPRINT_SOF_ISR
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 8


 157              		.thumb
 158              		.thumb_func
 159              		.type	DEBUGPRINT_SOF_ISR, %function
 160              	DEBUGPRINT_SOF_ISR:
 161              	.LFB3:
 244:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         }
 245:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 246:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (!(CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         #if (defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             if (DEBUGPRINT_midi_out_ep == DEBUGPRINT_EP3)
 250:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             {
 251:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****                 DEBUGPRINT_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             }
 253:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         #endif /* (DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (!(CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 256:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 258:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 260:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 264:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC3 && defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         
 267:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         }
 269:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC3 && DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     }
 271:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #endif /* (DEBUGPRINT_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 273:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 274:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #if (DEBUGPRINT_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     * Function Name: DEBUGPRINT_EP_4_ISR
 277:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 279:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 281:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     CY_ISR(DEBUGPRINT_EP_4_ISR)
 283:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     {
 284:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 288:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 290:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 292:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC3 && defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         {
 295:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             uint8 intEn = EA;
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 9


 296:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC3 && DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 299:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_ClearSieEpInterruptSource(DEBUGPRINT_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         
 301:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         */
 305:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         if (0u != (DEBUGPRINT_EP[DEBUGPRINT_EP4].addr & DEBUGPRINT_DIR_IN))
 307:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         {
 309:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             (void) DEBUGPRINT_SIE_EP_BASE.sieEp[DEBUGPRINT_EP4].epCr0;
 311:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 312:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             if (DEBUGPRINT_GET_EP_TYPE(DEBUGPRINT_EP4) != DEBUGPRINT_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             {
 315:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****                 DEBUGPRINT_EP[DEBUGPRINT_EP4].epToggle ^= DEBUGPRINT_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             }
 317:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 318:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             */
 324:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             DEBUGPRINT_EP[DEBUGPRINT_EP4].apiEpState = DEBUGPRINT_EVENT_PENDING;
 325:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         }
 326:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 327:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (!(CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         #if (defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             if(DEBUGPRINT_midi_out_ep == DEBUGPRINT_EP4)
 331:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             {
 332:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****                 DEBUGPRINT_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             }
 334:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         #endif /* (DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (!(CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 337:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 339:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 341:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 345:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC3 && defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         
 348:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         }
 350:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC3 && DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     }
 352:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #endif /* (DEBUGPRINT_EP4_ISR_ACTIVE) */
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 10


 353:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 354:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 355:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #if (DEBUGPRINT_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     * Function Name: DEBUGPRINT_EP_5_ISR
 358:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 360:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 362:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 363:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     CY_ISR(DEBUGPRINT_EP_5_ISR)
 365:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     {
 366:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 370:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 372:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 374:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) &&
 375:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****                  DEBUGPRINT_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         {
 377:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC3 && DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 381:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_ClearSieEpInterruptSource(DEBUGPRINT_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     
 383:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         */
 387:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         if (0u != (DEBUGPRINT_EP[DEBUGPRINT_EP5].addr & DEBUGPRINT_DIR_IN))
 389:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         {            
 391:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             (void) DEBUGPRINT_SIE_EP_BASE.sieEp[DEBUGPRINT_EP5].epCr0;
 393:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 394:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             if (DEBUGPRINT_GET_EP_TYPE(DEBUGPRINT_EP5) != DEBUGPRINT_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             {
 397:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****                 DEBUGPRINT_EP[DEBUGPRINT_EP5].epToggle ^= DEBUGPRINT_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             }
 399:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 400:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             */
 406:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             DEBUGPRINT_EP[DEBUGPRINT_EP5].apiEpState = DEBUGPRINT_EVENT_PENDING;
 407:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         }
 408:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 409:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (!(CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO))        
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 11


 410:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         #if (defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             if (DEBUGPRINT_midi_out_ep == DEBUGPRINT_EP5)
 413:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             {
 414:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****                 DEBUGPRINT_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             }
 416:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         #endif /* (DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (!(CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 419:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 421:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 423:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 427:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC3 && defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         
 430:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         }
 432:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC3 && DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     }
 434:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #endif /* (DEBUGPRINT_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 436:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 437:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #if (DEBUGPRINT_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     * Function Name: DEBUGPRINT_EP_6_ISR
 440:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 442:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 444:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 445:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     CY_ISR(DEBUGPRINT_EP_6_ISR)
 447:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     {
 448:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 452:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 454:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 456:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC3 && defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         {
 459:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC3 && DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 463:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_ClearSieEpInterruptSource(DEBUGPRINT_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         
 465:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 12


 467:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         */
 469:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         if (0u != (DEBUGPRINT_EP[DEBUGPRINT_EP6].addr & DEBUGPRINT_DIR_IN))
 471:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         {
 473:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             (void) DEBUGPRINT_SIE_EP_BASE.sieEp[DEBUGPRINT_EP6].epCr0;
 475:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 476:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             if (DEBUGPRINT_GET_EP_TYPE(DEBUGPRINT_EP6) != DEBUGPRINT_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             {
 479:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****                 DEBUGPRINT_EP[DEBUGPRINT_EP6].epToggle ^= DEBUGPRINT_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             }
 481:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             
 482:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             */
 488:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             DEBUGPRINT_EP[DEBUGPRINT_EP6].apiEpState = DEBUGPRINT_EVENT_PENDING;
 489:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         }
 490:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 491:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (!(CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         #if (defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             if (DEBUGPRINT_midi_out_ep == DEBUGPRINT_EP6)
 495:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             {
 496:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****                 DEBUGPRINT_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             }
 498:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         #endif /* (DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (!(CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 501:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 503:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 505:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 509:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC3 && defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         
 512:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         }
 514:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC3 && DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     }
 516:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #endif /* (DEBUGPRINT_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 518:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 519:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #if (DEBUGPRINT_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     * Function Name: DEBUGPRINT_EP_7_ISR
 522:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 13


 524:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 526:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 527:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     CY_ISR(DEBUGPRINT_EP_7_ISR)
 529:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     {
 530:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 534:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 536:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 538:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC3 && defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         {
 541:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC3 && DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     
 545:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_ClearSieEpInterruptSource(DEBUGPRINT_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         
 547:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         */
 551:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         if (0u != (DEBUGPRINT_EP[DEBUGPRINT_EP7].addr & DEBUGPRINT_DIR_IN))
 553:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         {           
 555:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             (void) DEBUGPRINT_SIE_EP_BASE.sieEp[DEBUGPRINT_EP7].epCr0;
 557:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 558:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             if (DEBUGPRINT_GET_EP_TYPE(DEBUGPRINT_EP7) != DEBUGPRINT_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             {
 561:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****                 DEBUGPRINT_EP[DEBUGPRINT_EP7].epToggle ^= DEBUGPRINT_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             }
 563:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             
 564:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             */
 570:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             DEBUGPRINT_EP[DEBUGPRINT_EP7].apiEpState = DEBUGPRINT_EVENT_PENDING;
 571:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         }
 572:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 573:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 574:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (!(CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         #if (defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             if(DEBUGPRINT_midi_out_ep == DEBUGPRINT_EP7)
 578:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             {
 579:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****                 DEBUGPRINT_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             }
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 14


 581:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         #endif /* (DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (!(CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 584:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 586:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 588:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 592:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC3 && defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         
 595:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         }
 597:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC3 && DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     }
 599:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #endif /* (DEBUGPRINT_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 601:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 602:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #if (DEBUGPRINT_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     * Function Name: DEBUGPRINT_EP_8_ISR
 605:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 607:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 609:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 610:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     CY_ISR(DEBUGPRINT_EP_8_ISR)
 612:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     {
 613:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 617:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 619:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 621:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC3 && defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         {
 624:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC3 && DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 628:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_ClearSieEpInterruptSource(DEBUGPRINT_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         
 630:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         */
 634:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         if (0u != (DEBUGPRINT_EP[DEBUGPRINT_EP8].addr & DEBUGPRINT_DIR_IN))
 636:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         {
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 15


 638:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             (void) DEBUGPRINT_SIE_EP_BASE.sieEp[DEBUGPRINT_EP8].epCr0;
 640:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 641:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             if (DEBUGPRINT_GET_EP_TYPE(DEBUGPRINT_EP8) != DEBUGPRINT_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             {
 644:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****                 DEBUGPRINT_EP[DEBUGPRINT_EP8].epToggle ^= DEBUGPRINT_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             }
 646:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 647:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             */
 653:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             DEBUGPRINT_EP[DEBUGPRINT_EP8].apiEpState = DEBUGPRINT_EVENT_PENDING;
 654:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         }
 655:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 656:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (!(CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         #if (defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             if (DEBUGPRINT_midi_out_ep == DEBUGPRINT_EP8)
 660:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             {
 661:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****                 DEBUGPRINT_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             }
 663:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         #endif /* (DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (!(CY_PSOC4 && DEBUGPRINT_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 666:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 668:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 670:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 674:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #if (CY_PSOC3 && defined(DEBUGPRINT_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         !defined(DEBUGPRINT_MAIN_SERVICE_MIDI_OUT) && DEBUGPRINT_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         
 677:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         }
 679:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (CY_PSOC3 && DEBUGPRINT_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     }
 681:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #endif /* (DEBUGPRINT_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 683:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 684:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #if (DEBUGPRINT_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     * Function Name: DEBUGPRINT_SOF_ISR
 687:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 689:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 691:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *
 692:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     CY_ISR(DEBUGPRINT_SOF_ISR)
 694:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     {
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 16


 162              		.loc 1 694 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167 0000 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE3:
 170              		.size	DEBUGPRINT_SOF_ISR, .-DEBUGPRINT_SOF_ISR
 171 0002 00BF     		.section	.text.DEBUGPRINT_BUS_RESET_ISR,"ax",%progbits
 172              		.align	2
 173              		.global	DEBUGPRINT_BUS_RESET_ISR
 174              		.thumb
 175              		.thumb_func
 176              		.type	DEBUGPRINT_BUS_RESET_ISR, %function
 177              	DEBUGPRINT_BUS_RESET_ISR:
 178              	.LFB4:
 695:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 699:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 701:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 703:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_ClearSieInterruptSource(DEBUGPRINT_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 705:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #ifdef DEBUGPRINT_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****         DEBUGPRINT_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     #endif /* (DEBUGPRINT_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     }
 709:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #endif /* (DEBUGPRINT_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 711:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 712:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #if (DEBUGPRINT_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** * Function Name: DEBUGPRINT_BUS_RESET_ISR
 715:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** *
 717:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** *
 720:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** *
 721:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** CY_ISR(DEBUGPRINT_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** {
 179              		.loc 1 723 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		.loc 1 723 0
 184 0000 08B5     		push	{r3, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 3, -8
 187              		.cfi_offset 14, -4
 724:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #ifdef DEBUGPRINT_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     DEBUGPRINT_BUS_RESET_ISR_EntryCallback();
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 17


 726:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** #endif /* (DEBUGPRINT_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 728:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 730:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 732:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     DEBUGPRINT_ClearSieInterruptSource(DEBUGPRINT_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/DEBUGPRINT_episr.c **** 
 734:Generated_Source\PSoC5/DEBUGPRINT_episr.c ****     DEBUGPRINT_ReInitComponent();
 188              		.loc 1 734 0
 189 0002 FFF7FEFF 		bl	DEBUGPRINT_ReInitComponent
 190              	.LVL0:
 191 0006 08BD     		pop	{r3, pc}
 192              		.cfi_endproc
 193              	.LFE4:
 194              		.size	DEBUGPRINT_BUS_RESET_ISR, .-DEBUGPRINT_BUS_RESET_ISR
 195              		.text
 196              	.Letext0:
 197              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 198              		.file 3 "Generated_Source\\PSoC5\\DEBUGPRINT.h"
 199              		.file 4 "Generated_Source\\PSoC5\\DEBUGPRINT_pvt.h"
 200              		.section	.debug_info,"",%progbits
 201              	.Ldebug_info0:
 202 0000 40020000 		.4byte	0x240
 203 0004 0400     		.2byte	0x4
 204 0006 00000000 		.4byte	.Ldebug_abbrev0
 205 000a 04       		.byte	0x4
 206 000b 01       		.uleb128 0x1
 207 000c 47010000 		.4byte	.LASF36
 208 0010 01       		.byte	0x1
 209 0011 25020000 		.4byte	.LASF37
 210 0015 E4000000 		.4byte	.LASF38
 211 0019 00000000 		.4byte	.Ldebug_ranges0+0
 212 001d 00000000 		.4byte	0
 213 0021 00000000 		.4byte	.Ldebug_line0
 214 0025 02       		.uleb128 0x2
 215 0026 01       		.byte	0x1
 216 0027 06       		.byte	0x6
 217 0028 C5020000 		.4byte	.LASF0
 218 002c 02       		.uleb128 0x2
 219 002d 01       		.byte	0x1
 220 002e 08       		.byte	0x8
 221 002f BC000000 		.4byte	.LASF1
 222 0033 02       		.uleb128 0x2
 223 0034 02       		.byte	0x2
 224 0035 05       		.byte	0x5
 225 0036 A2020000 		.4byte	.LASF2
 226 003a 02       		.uleb128 0x2
 227 003b 02       		.byte	0x2
 228 003c 07       		.byte	0x7
 229 003d 41000000 		.4byte	.LASF3
 230 0041 02       		.uleb128 0x2
 231 0042 04       		.byte	0x4
 232 0043 05       		.byte	0x5
 233 0044 BC020000 		.4byte	.LASF4
 234 0048 02       		.uleb128 0x2
 235 0049 04       		.byte	0x4
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 18


 236 004a 07       		.byte	0x7
 237 004b 8B000000 		.4byte	.LASF5
 238 004f 02       		.uleb128 0x2
 239 0050 08       		.byte	0x8
 240 0051 05       		.byte	0x5
 241 0052 7B020000 		.4byte	.LASF6
 242 0056 02       		.uleb128 0x2
 243 0057 08       		.byte	0x8
 244 0058 07       		.byte	0x7
 245 0059 F0010000 		.4byte	.LASF7
 246 005d 03       		.uleb128 0x3
 247 005e 04       		.byte	0x4
 248 005f 05       		.byte	0x5
 249 0060 696E7400 		.ascii	"int\000"
 250 0064 02       		.uleb128 0x2
 251 0065 04       		.byte	0x4
 252 0066 07       		.byte	0x7
 253 0067 D5010000 		.4byte	.LASF8
 254 006b 04       		.uleb128 0x4
 255 006c AC020000 		.4byte	.LASF9
 256 0070 02       		.byte	0x2
 257 0071 9201     		.2byte	0x192
 258 0073 2C000000 		.4byte	0x2c
 259 0077 04       		.uleb128 0x4
 260 0078 35010000 		.4byte	.LASF10
 261 007c 02       		.byte	0x2
 262 007d 9301     		.2byte	0x193
 263 007f 3A000000 		.4byte	0x3a
 264 0083 02       		.uleb128 0x2
 265 0084 04       		.byte	0x4
 266 0085 04       		.byte	0x4
 267 0086 20000000 		.4byte	.LASF11
 268 008a 02       		.uleb128 0x2
 269 008b 08       		.byte	0x8
 270 008c 04       		.byte	0x4
 271 008d 1C010000 		.4byte	.LASF12
 272 0091 02       		.uleb128 0x2
 273 0092 01       		.byte	0x1
 274 0093 08       		.byte	0x8
 275 0094 92020000 		.4byte	.LASF13
 276 0098 04       		.uleb128 0x4
 277 0099 86000000 		.4byte	.LASF14
 278 009d 02       		.byte	0x2
 279 009e 3C02     		.2byte	0x23c
 280 00a0 A4000000 		.4byte	0xa4
 281 00a4 05       		.uleb128 0x5
 282 00a5 6B000000 		.4byte	0x6b
 283 00a9 02       		.uleb128 0x2
 284 00aa 04       		.byte	0x4
 285 00ab 07       		.byte	0x7
 286 00ac 89020000 		.4byte	.LASF15
 287 00b0 06       		.uleb128 0x6
 288 00b1 0C       		.byte	0xc
 289 00b2 03       		.byte	0x3
 290 00b3 8D       		.byte	0x8d
 291 00b4 25010000 		.4byte	0x125
 292 00b8 07       		.uleb128 0x7
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 19


 293 00b9 23010000 		.4byte	.LASF16
 294 00bd 03       		.byte	0x3
 295 00be 8F       		.byte	0x8f
 296 00bf 6B000000 		.4byte	0x6b
 297 00c3 00       		.byte	0
 298 00c4 07       		.uleb128 0x7
 299 00c5 3C010000 		.4byte	.LASF17
 300 00c9 03       		.byte	0x3
 301 00ca 90       		.byte	0x90
 302 00cb 6B000000 		.4byte	0x6b
 303 00cf 01       		.byte	0x1
 304 00d0 07       		.uleb128 0x7
 305 00d1 07020000 		.4byte	.LASF18
 306 00d5 03       		.byte	0x3
 307 00d6 91       		.byte	0x91
 308 00d7 6B000000 		.4byte	0x6b
 309 00db 02       		.byte	0x2
 310 00dc 07       		.uleb128 0x7
 311 00dd 76000000 		.4byte	.LASF19
 312 00e1 03       		.byte	0x3
 313 00e2 92       		.byte	0x92
 314 00e3 6B000000 		.4byte	0x6b
 315 00e7 03       		.byte	0x3
 316 00e8 07       		.uleb128 0x7
 317 00e9 9D000000 		.4byte	.LASF20
 318 00ed 03       		.byte	0x3
 319 00ee 93       		.byte	0x93
 320 00ef 6B000000 		.4byte	0x6b
 321 00f3 04       		.byte	0x4
 322 00f4 07       		.uleb128 0x7
 323 00f5 7F000000 		.4byte	.LASF21
 324 00f9 03       		.byte	0x3
 325 00fa 94       		.byte	0x94
 326 00fb 6B000000 		.4byte	0x6b
 327 00ff 05       		.byte	0x5
 328 0100 07       		.uleb128 0x7
 329 0101 2A010000 		.4byte	.LASF22
 330 0105 03       		.byte	0x3
 331 0106 95       		.byte	0x95
 332 0107 77000000 		.4byte	0x77
 333 010b 06       		.byte	0x6
 334 010c 07       		.uleb128 0x7
 335 010d 97020000 		.4byte	.LASF23
 336 0111 03       		.byte	0x3
 337 0112 96       		.byte	0x96
 338 0113 77000000 		.4byte	0x77
 339 0117 08       		.byte	0x8
 340 0118 07       		.uleb128 0x7
 341 0119 B2020000 		.4byte	.LASF24
 342 011d 03       		.byte	0x3
 343 011e 97       		.byte	0x97
 344 011f 6B000000 		.4byte	0x6b
 345 0123 0A       		.byte	0xa
 346 0124 00       		.byte	0
 347 0125 08       		.uleb128 0x8
 348 0126 CA000000 		.4byte	.LASF25
 349 012a 03       		.byte	0x3
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 20


 350 012b 98       		.byte	0x98
 351 012c B0000000 		.4byte	0xb0
 352 0130 06       		.uleb128 0x6
 353 0131 10       		.byte	0x10
 354 0132 03       		.byte	0x3
 355 0133 D4       		.byte	0xd4
 356 0134 69010000 		.4byte	0x169
 357 0138 07       		.uleb128 0x7
 358 0139 68000000 		.4byte	.LASF26
 359 013d 03       		.byte	0x3
 360 013e D6       		.byte	0xd6
 361 013f 6B000000 		.4byte	0x6b
 362 0143 00       		.byte	0
 363 0144 07       		.uleb128 0x7
 364 0145 6F000000 		.4byte	.LASF27
 365 0149 03       		.byte	0x3
 366 014a D7       		.byte	0xd7
 367 014b 6B000000 		.4byte	0x6b
 368 014f 01       		.byte	0x1
 369 0150 07       		.uleb128 0x7
 370 0151 1A000000 		.4byte	.LASF28
 371 0155 03       		.byte	0x3
 372 0156 D8       		.byte	0xd8
 373 0157 6B000000 		.4byte	0x6b
 374 015b 02       		.byte	0x2
 375 015c 09       		.uleb128 0x9
 376 015d 67617000 		.ascii	"gap\000"
 377 0161 03       		.byte	0x3
 378 0162 D9       		.byte	0xd9
 379 0163 69010000 		.4byte	0x169
 380 0167 03       		.byte	0x3
 381 0168 00       		.byte	0
 382 0169 0A       		.uleb128 0xa
 383 016a 6B000000 		.4byte	0x6b
 384 016e 79010000 		.4byte	0x179
 385 0172 0B       		.uleb128 0xb
 386 0173 A9000000 		.4byte	0xa9
 387 0177 0C       		.byte	0xc
 388 0178 00       		.byte	0
 389 0179 08       		.uleb128 0x8
 390 017a D1020000 		.4byte	.LASF29
 391 017e 03       		.byte	0x3
 392 017f DA       		.byte	0xda
 393 0180 30010000 		.4byte	0x130
 394 0184 0C       		.uleb128 0xc
 395 0185 90       		.byte	0x90
 396 0186 03       		.byte	0x3
 397 0187 0E01     		.2byte	0x10e
 398 0189 9B010000 		.4byte	0x19b
 399 018d 0D       		.uleb128 0xd
 400 018e A2000000 		.4byte	.LASF30
 401 0192 03       		.byte	0x3
 402 0193 1001     		.2byte	0x110
 403 0195 9B010000 		.4byte	0x19b
 404 0199 00       		.byte	0
 405 019a 00       		.byte	0
 406 019b 0A       		.uleb128 0xa
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 21


 407 019c 79010000 		.4byte	0x179
 408 01a0 AB010000 		.4byte	0x1ab
 409 01a4 0B       		.uleb128 0xb
 410 01a5 A9000000 		.4byte	0xa9
 411 01a9 08       		.byte	0x8
 412 01aa 00       		.byte	0
 413 01ab 04       		.uleb128 0x4
 414 01ac 00000000 		.4byte	.LASF31
 415 01b0 03       		.byte	0x3
 416 01b1 1101     		.2byte	0x111
 417 01b3 84010000 		.4byte	0x184
 418 01b7 0E       		.uleb128 0xe
 419 01b8 54000000 		.4byte	.LASF32
 420 01bc 01       		.byte	0x1
 421 01bd 25       		.byte	0x25
 422 01be 00000000 		.4byte	.LFB0
 423 01c2 30000000 		.4byte	.LFE0-.LFB0
 424 01c6 01       		.uleb128 0x1
 425 01c7 9C       		.byte	0x9c
 426 01c8 0E       		.uleb128 0xe
 427 01c9 A8000000 		.4byte	.LASF33
 428 01cd 01       		.byte	0x1
 429 01ce 78       		.byte	0x78
 430 01cf 00000000 		.4byte	.LFB1
 431 01d3 34000000 		.4byte	.LFE1-.LFB1
 432 01d7 01       		.uleb128 0x1
 433 01d8 9C       		.byte	0x9c
 434 01d9 0E       		.uleb128 0xe
 435 01da 11020000 		.4byte	.LASF34
 436 01de 01       		.byte	0x1
 437 01df C9       		.byte	0xc9
 438 01e0 00000000 		.4byte	.LFB2
 439 01e4 3C000000 		.4byte	.LFE2-.LFB2
 440 01e8 01       		.uleb128 0x1
 441 01e9 9C       		.byte	0x9c
 442 01ea 0F       		.uleb128 0xf
 443 01eb 4F020000 		.4byte	.LASF35
 444 01ef 01       		.byte	0x1
 445 01f0 B502     		.2byte	0x2b5
 446 01f2 00000000 		.4byte	.LFB3
 447 01f6 02000000 		.4byte	.LFE3-.LFB3
 448 01fa 01       		.uleb128 0x1
 449 01fb 9C       		.byte	0x9c
 450 01fc 10       		.uleb128 0x10
 451 01fd 62020000 		.4byte	.LASF39
 452 0201 01       		.byte	0x1
 453 0202 D202     		.2byte	0x2d2
 454 0204 00000000 		.4byte	.LFB4
 455 0208 08000000 		.4byte	.LFE4-.LFB4
 456 020c 01       		.uleb128 0x1
 457 020d 9C       		.byte	0x9c
 458 020e 1C020000 		.4byte	0x21c
 459 0212 11       		.uleb128 0x11
 460 0213 06000000 		.4byte	.LVL0
 461 0217 3C020000 		.4byte	0x23c
 462 021b 00       		.byte	0
 463 021c 0A       		.uleb128 0xa
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 22


 464 021d 25010000 		.4byte	0x125
 465 0221 2C020000 		.4byte	0x22c
 466 0225 0B       		.uleb128 0xb
 467 0226 A9000000 		.4byte	0xa9
 468 022a 08       		.byte	0x8
 469 022b 00       		.byte	0
 470 022c 12       		.uleb128 0x12
 471 022d E2010000 		.4byte	.LASF40
 472 0231 04       		.byte	0x4
 473 0232 79       		.byte	0x79
 474 0233 37020000 		.4byte	0x237
 475 0237 05       		.uleb128 0x5
 476 0238 1C020000 		.4byte	0x21c
 477 023c 13       		.uleb128 0x13
 478 023d 26000000 		.4byte	.LASF41
 479 0241 04       		.byte	0x4
 480 0242 A4       		.byte	0xa4
 481 0243 00       		.byte	0
 482              		.section	.debug_abbrev,"",%progbits
 483              	.Ldebug_abbrev0:
 484 0000 01       		.uleb128 0x1
 485 0001 11       		.uleb128 0x11
 486 0002 01       		.byte	0x1
 487 0003 25       		.uleb128 0x25
 488 0004 0E       		.uleb128 0xe
 489 0005 13       		.uleb128 0x13
 490 0006 0B       		.uleb128 0xb
 491 0007 03       		.uleb128 0x3
 492 0008 0E       		.uleb128 0xe
 493 0009 1B       		.uleb128 0x1b
 494 000a 0E       		.uleb128 0xe
 495 000b 55       		.uleb128 0x55
 496 000c 17       		.uleb128 0x17
 497 000d 11       		.uleb128 0x11
 498 000e 01       		.uleb128 0x1
 499 000f 10       		.uleb128 0x10
 500 0010 17       		.uleb128 0x17
 501 0011 00       		.byte	0
 502 0012 00       		.byte	0
 503 0013 02       		.uleb128 0x2
 504 0014 24       		.uleb128 0x24
 505 0015 00       		.byte	0
 506 0016 0B       		.uleb128 0xb
 507 0017 0B       		.uleb128 0xb
 508 0018 3E       		.uleb128 0x3e
 509 0019 0B       		.uleb128 0xb
 510 001a 03       		.uleb128 0x3
 511 001b 0E       		.uleb128 0xe
 512 001c 00       		.byte	0
 513 001d 00       		.byte	0
 514 001e 03       		.uleb128 0x3
 515 001f 24       		.uleb128 0x24
 516 0020 00       		.byte	0
 517 0021 0B       		.uleb128 0xb
 518 0022 0B       		.uleb128 0xb
 519 0023 3E       		.uleb128 0x3e
 520 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 23


 521 0025 03       		.uleb128 0x3
 522 0026 08       		.uleb128 0x8
 523 0027 00       		.byte	0
 524 0028 00       		.byte	0
 525 0029 04       		.uleb128 0x4
 526 002a 16       		.uleb128 0x16
 527 002b 00       		.byte	0
 528 002c 03       		.uleb128 0x3
 529 002d 0E       		.uleb128 0xe
 530 002e 3A       		.uleb128 0x3a
 531 002f 0B       		.uleb128 0xb
 532 0030 3B       		.uleb128 0x3b
 533 0031 05       		.uleb128 0x5
 534 0032 49       		.uleb128 0x49
 535 0033 13       		.uleb128 0x13
 536 0034 00       		.byte	0
 537 0035 00       		.byte	0
 538 0036 05       		.uleb128 0x5
 539 0037 35       		.uleb128 0x35
 540 0038 00       		.byte	0
 541 0039 49       		.uleb128 0x49
 542 003a 13       		.uleb128 0x13
 543 003b 00       		.byte	0
 544 003c 00       		.byte	0
 545 003d 06       		.uleb128 0x6
 546 003e 13       		.uleb128 0x13
 547 003f 01       		.byte	0x1
 548 0040 0B       		.uleb128 0xb
 549 0041 0B       		.uleb128 0xb
 550 0042 3A       		.uleb128 0x3a
 551 0043 0B       		.uleb128 0xb
 552 0044 3B       		.uleb128 0x3b
 553 0045 0B       		.uleb128 0xb
 554 0046 01       		.uleb128 0x1
 555 0047 13       		.uleb128 0x13
 556 0048 00       		.byte	0
 557 0049 00       		.byte	0
 558 004a 07       		.uleb128 0x7
 559 004b 0D       		.uleb128 0xd
 560 004c 00       		.byte	0
 561 004d 03       		.uleb128 0x3
 562 004e 0E       		.uleb128 0xe
 563 004f 3A       		.uleb128 0x3a
 564 0050 0B       		.uleb128 0xb
 565 0051 3B       		.uleb128 0x3b
 566 0052 0B       		.uleb128 0xb
 567 0053 49       		.uleb128 0x49
 568 0054 13       		.uleb128 0x13
 569 0055 38       		.uleb128 0x38
 570 0056 0B       		.uleb128 0xb
 571 0057 00       		.byte	0
 572 0058 00       		.byte	0
 573 0059 08       		.uleb128 0x8
 574 005a 16       		.uleb128 0x16
 575 005b 00       		.byte	0
 576 005c 03       		.uleb128 0x3
 577 005d 0E       		.uleb128 0xe
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 24


 578 005e 3A       		.uleb128 0x3a
 579 005f 0B       		.uleb128 0xb
 580 0060 3B       		.uleb128 0x3b
 581 0061 0B       		.uleb128 0xb
 582 0062 49       		.uleb128 0x49
 583 0063 13       		.uleb128 0x13
 584 0064 00       		.byte	0
 585 0065 00       		.byte	0
 586 0066 09       		.uleb128 0x9
 587 0067 0D       		.uleb128 0xd
 588 0068 00       		.byte	0
 589 0069 03       		.uleb128 0x3
 590 006a 08       		.uleb128 0x8
 591 006b 3A       		.uleb128 0x3a
 592 006c 0B       		.uleb128 0xb
 593 006d 3B       		.uleb128 0x3b
 594 006e 0B       		.uleb128 0xb
 595 006f 49       		.uleb128 0x49
 596 0070 13       		.uleb128 0x13
 597 0071 38       		.uleb128 0x38
 598 0072 0B       		.uleb128 0xb
 599 0073 00       		.byte	0
 600 0074 00       		.byte	0
 601 0075 0A       		.uleb128 0xa
 602 0076 01       		.uleb128 0x1
 603 0077 01       		.byte	0x1
 604 0078 49       		.uleb128 0x49
 605 0079 13       		.uleb128 0x13
 606 007a 01       		.uleb128 0x1
 607 007b 13       		.uleb128 0x13
 608 007c 00       		.byte	0
 609 007d 00       		.byte	0
 610 007e 0B       		.uleb128 0xb
 611 007f 21       		.uleb128 0x21
 612 0080 00       		.byte	0
 613 0081 49       		.uleb128 0x49
 614 0082 13       		.uleb128 0x13
 615 0083 2F       		.uleb128 0x2f
 616 0084 0B       		.uleb128 0xb
 617 0085 00       		.byte	0
 618 0086 00       		.byte	0
 619 0087 0C       		.uleb128 0xc
 620 0088 13       		.uleb128 0x13
 621 0089 01       		.byte	0x1
 622 008a 0B       		.uleb128 0xb
 623 008b 0B       		.uleb128 0xb
 624 008c 3A       		.uleb128 0x3a
 625 008d 0B       		.uleb128 0xb
 626 008e 3B       		.uleb128 0x3b
 627 008f 05       		.uleb128 0x5
 628 0090 01       		.uleb128 0x1
 629 0091 13       		.uleb128 0x13
 630 0092 00       		.byte	0
 631 0093 00       		.byte	0
 632 0094 0D       		.uleb128 0xd
 633 0095 0D       		.uleb128 0xd
 634 0096 00       		.byte	0
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 25


 635 0097 03       		.uleb128 0x3
 636 0098 0E       		.uleb128 0xe
 637 0099 3A       		.uleb128 0x3a
 638 009a 0B       		.uleb128 0xb
 639 009b 3B       		.uleb128 0x3b
 640 009c 05       		.uleb128 0x5
 641 009d 49       		.uleb128 0x49
 642 009e 13       		.uleb128 0x13
 643 009f 38       		.uleb128 0x38
 644 00a0 0B       		.uleb128 0xb
 645 00a1 00       		.byte	0
 646 00a2 00       		.byte	0
 647 00a3 0E       		.uleb128 0xe
 648 00a4 2E       		.uleb128 0x2e
 649 00a5 00       		.byte	0
 650 00a6 3F       		.uleb128 0x3f
 651 00a7 19       		.uleb128 0x19
 652 00a8 03       		.uleb128 0x3
 653 00a9 0E       		.uleb128 0xe
 654 00aa 3A       		.uleb128 0x3a
 655 00ab 0B       		.uleb128 0xb
 656 00ac 3B       		.uleb128 0x3b
 657 00ad 0B       		.uleb128 0xb
 658 00ae 27       		.uleb128 0x27
 659 00af 19       		.uleb128 0x19
 660 00b0 11       		.uleb128 0x11
 661 00b1 01       		.uleb128 0x1
 662 00b2 12       		.uleb128 0x12
 663 00b3 06       		.uleb128 0x6
 664 00b4 40       		.uleb128 0x40
 665 00b5 18       		.uleb128 0x18
 666 00b6 9742     		.uleb128 0x2117
 667 00b8 19       		.uleb128 0x19
 668 00b9 00       		.byte	0
 669 00ba 00       		.byte	0
 670 00bb 0F       		.uleb128 0xf
 671 00bc 2E       		.uleb128 0x2e
 672 00bd 00       		.byte	0
 673 00be 3F       		.uleb128 0x3f
 674 00bf 19       		.uleb128 0x19
 675 00c0 03       		.uleb128 0x3
 676 00c1 0E       		.uleb128 0xe
 677 00c2 3A       		.uleb128 0x3a
 678 00c3 0B       		.uleb128 0xb
 679 00c4 3B       		.uleb128 0x3b
 680 00c5 05       		.uleb128 0x5
 681 00c6 27       		.uleb128 0x27
 682 00c7 19       		.uleb128 0x19
 683 00c8 11       		.uleb128 0x11
 684 00c9 01       		.uleb128 0x1
 685 00ca 12       		.uleb128 0x12
 686 00cb 06       		.uleb128 0x6
 687 00cc 40       		.uleb128 0x40
 688 00cd 18       		.uleb128 0x18
 689 00ce 9742     		.uleb128 0x2117
 690 00d0 19       		.uleb128 0x19
 691 00d1 00       		.byte	0
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 26


 692 00d2 00       		.byte	0
 693 00d3 10       		.uleb128 0x10
 694 00d4 2E       		.uleb128 0x2e
 695 00d5 01       		.byte	0x1
 696 00d6 3F       		.uleb128 0x3f
 697 00d7 19       		.uleb128 0x19
 698 00d8 03       		.uleb128 0x3
 699 00d9 0E       		.uleb128 0xe
 700 00da 3A       		.uleb128 0x3a
 701 00db 0B       		.uleb128 0xb
 702 00dc 3B       		.uleb128 0x3b
 703 00dd 05       		.uleb128 0x5
 704 00de 27       		.uleb128 0x27
 705 00df 19       		.uleb128 0x19
 706 00e0 11       		.uleb128 0x11
 707 00e1 01       		.uleb128 0x1
 708 00e2 12       		.uleb128 0x12
 709 00e3 06       		.uleb128 0x6
 710 00e4 40       		.uleb128 0x40
 711 00e5 18       		.uleb128 0x18
 712 00e6 9742     		.uleb128 0x2117
 713 00e8 19       		.uleb128 0x19
 714 00e9 01       		.uleb128 0x1
 715 00ea 13       		.uleb128 0x13
 716 00eb 00       		.byte	0
 717 00ec 00       		.byte	0
 718 00ed 11       		.uleb128 0x11
 719 00ee 898201   		.uleb128 0x4109
 720 00f1 00       		.byte	0
 721 00f2 11       		.uleb128 0x11
 722 00f3 01       		.uleb128 0x1
 723 00f4 31       		.uleb128 0x31
 724 00f5 13       		.uleb128 0x13
 725 00f6 00       		.byte	0
 726 00f7 00       		.byte	0
 727 00f8 12       		.uleb128 0x12
 728 00f9 34       		.uleb128 0x34
 729 00fa 00       		.byte	0
 730 00fb 03       		.uleb128 0x3
 731 00fc 0E       		.uleb128 0xe
 732 00fd 3A       		.uleb128 0x3a
 733 00fe 0B       		.uleb128 0xb
 734 00ff 3B       		.uleb128 0x3b
 735 0100 0B       		.uleb128 0xb
 736 0101 49       		.uleb128 0x49
 737 0102 13       		.uleb128 0x13
 738 0103 3F       		.uleb128 0x3f
 739 0104 19       		.uleb128 0x19
 740 0105 3C       		.uleb128 0x3c
 741 0106 19       		.uleb128 0x19
 742 0107 00       		.byte	0
 743 0108 00       		.byte	0
 744 0109 13       		.uleb128 0x13
 745 010a 2E       		.uleb128 0x2e
 746 010b 00       		.byte	0
 747 010c 3F       		.uleb128 0x3f
 748 010d 19       		.uleb128 0x19
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 27


 749 010e 03       		.uleb128 0x3
 750 010f 0E       		.uleb128 0xe
 751 0110 3A       		.uleb128 0x3a
 752 0111 0B       		.uleb128 0xb
 753 0112 3B       		.uleb128 0x3b
 754 0113 0B       		.uleb128 0xb
 755 0114 27       		.uleb128 0x27
 756 0115 19       		.uleb128 0x19
 757 0116 3C       		.uleb128 0x3c
 758 0117 19       		.uleb128 0x19
 759 0118 00       		.byte	0
 760 0119 00       		.byte	0
 761 011a 00       		.byte	0
 762              		.section	.debug_aranges,"",%progbits
 763 0000 3C000000 		.4byte	0x3c
 764 0004 0200     		.2byte	0x2
 765 0006 00000000 		.4byte	.Ldebug_info0
 766 000a 04       		.byte	0x4
 767 000b 00       		.byte	0
 768 000c 0000     		.2byte	0
 769 000e 0000     		.2byte	0
 770 0010 00000000 		.4byte	.LFB0
 771 0014 30000000 		.4byte	.LFE0-.LFB0
 772 0018 00000000 		.4byte	.LFB1
 773 001c 34000000 		.4byte	.LFE1-.LFB1
 774 0020 00000000 		.4byte	.LFB2
 775 0024 3C000000 		.4byte	.LFE2-.LFB2
 776 0028 00000000 		.4byte	.LFB3
 777 002c 02000000 		.4byte	.LFE3-.LFB3
 778 0030 00000000 		.4byte	.LFB4
 779 0034 08000000 		.4byte	.LFE4-.LFB4
 780 0038 00000000 		.4byte	0
 781 003c 00000000 		.4byte	0
 782              		.section	.debug_ranges,"",%progbits
 783              	.Ldebug_ranges0:
 784 0000 00000000 		.4byte	.LFB0
 785 0004 30000000 		.4byte	.LFE0
 786 0008 00000000 		.4byte	.LFB1
 787 000c 34000000 		.4byte	.LFE1
 788 0010 00000000 		.4byte	.LFB2
 789 0014 3C000000 		.4byte	.LFE2
 790 0018 00000000 		.4byte	.LFB3
 791 001c 02000000 		.4byte	.LFE3
 792 0020 00000000 		.4byte	.LFB4
 793 0024 08000000 		.4byte	.LFE4
 794 0028 00000000 		.4byte	0
 795 002c 00000000 		.4byte	0
 796              		.section	.debug_line,"",%progbits
 797              	.Ldebug_line0:
 798 0000 EB000000 		.section	.debug_str,"MS",%progbits,1
 798      02007100 
 798      00000201 
 798      FB0E0D00 
 798      01010101 
 799              	.LASF31:
 800 0000 44454255 		.ascii	"DEBUGPRINT_sie_eps_struct\000"
 800      47505249 
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 28


 800      4E545F73 
 800      69655F65 
 800      70735F73 
 801              	.LASF28:
 802 001a 65704372 		.ascii	"epCr0\000"
 802      3000
 803              	.LASF11:
 804 0020 666C6F61 		.ascii	"float\000"
 804      7400
 805              	.LASF41:
 806 0026 44454255 		.ascii	"DEBUGPRINT_ReInitComponent\000"
 806      47505249 
 806      4E545F52 
 806      65496E69 
 806      74436F6D 
 807              	.LASF3:
 808 0041 73686F72 		.ascii	"short unsigned int\000"
 808      7420756E 
 808      7369676E 
 808      65642069 
 808      6E7400
 809              	.LASF32:
 810 0054 44454255 		.ascii	"DEBUGPRINT_EP_1_ISR\000"
 810      47505249 
 810      4E545F45 
 810      505F315F 
 810      49535200 
 811              	.LASF26:
 812 0068 6570436E 		.ascii	"epCnt0\000"
 812      743000
 813              	.LASF27:
 814 006f 6570436E 		.ascii	"epCnt1\000"
 814      743100
 815              	.LASF19:
 816 0076 6570546F 		.ascii	"epToggle\000"
 816      67676C65 
 816      00
 817              	.LASF21:
 818 007f 65704D6F 		.ascii	"epMode\000"
 818      646500
 819              	.LASF14:
 820 0086 72656738 		.ascii	"reg8\000"
 820      00
 821              	.LASF5:
 822 008b 6C6F6E67 		.ascii	"long unsigned int\000"
 822      20756E73 
 822      69676E65 
 822      6420696E 
 822      7400
 823              	.LASF20:
 824 009d 61646472 		.ascii	"addr\000"
 824      00
 825              	.LASF30:
 826 00a2 73696545 		.ascii	"sieEp\000"
 826      7000
 827              	.LASF33:
 828 00a8 44454255 		.ascii	"DEBUGPRINT_EP_2_ISR\000"
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 29


 828      47505249 
 828      4E545F45 
 828      505F325F 
 828      49535200 
 829              	.LASF1:
 830 00bc 756E7369 		.ascii	"unsigned char\000"
 830      676E6564 
 830      20636861 
 830      7200
 831              	.LASF25:
 832 00ca 545F4445 		.ascii	"T_DEBUGPRINT_EP_CTL_BLOCK\000"
 832      42554750 
 832      52494E54 
 832      5F45505F 
 832      43544C5F 
 833              	.LASF38:
 834 00e4 433A5C55 		.ascii	"C:\\Users\\youkan\\Desktop\\came\\Workspace06\\Desi"
 834      73657273 
 834      5C796F75 
 834      6B616E5C 
 834      4465736B 
 835 0111 676E3031 		.ascii	"gn01.cydsn\000"
 835      2E637964 
 835      736E00
 836              	.LASF12:
 837 011c 646F7562 		.ascii	"double\000"
 837      6C6500
 838              	.LASF16:
 839 0123 61747472 		.ascii	"attrib\000"
 839      696200
 840              	.LASF22:
 841 012a 62756666 		.ascii	"buffOffset\000"
 841      4F666673 
 841      657400
 842              	.LASF10:
 843 0135 75696E74 		.ascii	"uint16\000"
 843      313600
 844              	.LASF17:
 845 013c 61706945 		.ascii	"apiEpState\000"
 845      70537461 
 845      746500
 846              	.LASF36:
 847 0147 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 847      4320342E 
 847      392E3320 
 847      32303135 
 847      30333033 
 848 017a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 848      20726576 
 848      6973696F 
 848      6E203232 
 848      31323230 
 849 01ad 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 849      66756E63 
 849      74696F6E 
 849      2D736563 
 849      74696F6E 
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 30


 850              	.LASF8:
 851 01d5 756E7369 		.ascii	"unsigned int\000"
 851      676E6564 
 851      20696E74 
 851      00
 852              	.LASF40:
 853 01e2 44454255 		.ascii	"DEBUGPRINT_EP\000"
 853      47505249 
 853      4E545F45 
 853      5000
 854              	.LASF7:
 855 01f0 6C6F6E67 		.ascii	"long long unsigned int\000"
 855      206C6F6E 
 855      6720756E 
 855      7369676E 
 855      65642069 
 856              	.LASF18:
 857 0207 68774570 		.ascii	"hwEpState\000"
 857      53746174 
 857      6500
 858              	.LASF34:
 859 0211 44454255 		.ascii	"DEBUGPRINT_EP_3_ISR\000"
 859      47505249 
 859      4E545F45 
 859      505F335F 
 859      49535200 
 860              	.LASF37:
 861 0225 47656E65 		.ascii	"Generated_Source\\PSoC5\\DEBUGPRINT_episr.c\000"
 861      72617465 
 861      645F536F 
 861      75726365 
 861      5C50536F 
 862              	.LASF35:
 863 024f 44454255 		.ascii	"DEBUGPRINT_SOF_ISR\000"
 863      47505249 
 863      4E545F53 
 863      4F465F49 
 863      535200
 864              	.LASF39:
 865 0262 44454255 		.ascii	"DEBUGPRINT_BUS_RESET_ISR\000"
 865      47505249 
 865      4E545F42 
 865      55535F52 
 865      45534554 
 866              	.LASF6:
 867 027b 6C6F6E67 		.ascii	"long long int\000"
 867      206C6F6E 
 867      6720696E 
 867      7400
 868              	.LASF15:
 869 0289 73697A65 		.ascii	"sizetype\000"
 869      74797065 
 869      00
 870              	.LASF13:
 871 0292 63686172 		.ascii	"char\000"
 871      00
 872              	.LASF23:
ARM GAS  C:\Users\youkan\AppData\Local\Temp\ccKFOzZa.s 			page 31


 873 0297 62756666 		.ascii	"bufferSize\000"
 873      65725369 
 873      7A6500
 874              	.LASF2:
 875 02a2 73686F72 		.ascii	"short int\000"
 875      7420696E 
 875      7400
 876              	.LASF9:
 877 02ac 75696E74 		.ascii	"uint8\000"
 877      3800
 878              	.LASF24:
 879 02b2 696E7465 		.ascii	"interface\000"
 879      72666163 
 879      6500
 880              	.LASF4:
 881 02bc 6C6F6E67 		.ascii	"long int\000"
 881      20696E74 
 881      00
 882              	.LASF0:
 883 02c5 7369676E 		.ascii	"signed char\000"
 883      65642063 
 883      68617200 
 884              	.LASF29:
 885 02d1 44454255 		.ascii	"DEBUGPRINT_sie_ep_struct\000"
 885      47505249 
 885      4E545F73 
 885      69655F65 
 885      705F7374 
 886              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
